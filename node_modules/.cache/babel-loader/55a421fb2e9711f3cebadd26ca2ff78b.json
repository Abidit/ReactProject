{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\reactAbidit\\\\src\\\\Body\\\\Addjob.js\";\nimport { Component, state, insertjob } from 'react';\nimport { Button, Form, Container, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport swal from 'sweetalert'; // For Admin and Job Owner\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Addjob extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Userid: localStorage.getItem('userid'),\n      JobOwner: localStorage.getItem('name'),\n      JobTitle: \"\",\n      Description: \"\",\n      SkillsNeeded: \"\",\n      BudgetTime: \"\",\n      config: {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      }\n    };\n\n    this.insertjob = e => {\n      e.preventDefault();\n      axios.post(\"http://localhost:3000/jobs/insert\", this.state, this.state.config).then(response => {\n        if (response.data.success === true) {\n          swal({\n            title: \"New Job\",\n            text: \"The job has been Inserted.\",\n            icon: \"success\"\n          });\n          console.log(response);\n          this.props.history.push(\"/findjob\");\n          this.forceUpdate();\n        } else if (response.data.success === false) {\n          swal(\"Invalid Input;\");\n        }\n      }).catch();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adddata\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"headTest\",\n              children: \"Add New Job Oppertunity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formme\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"JobTitle\",\n            className: \"form-control item\",\n            placeholder: \"Provide a job title\",\n            value: this.state.JobTitle,\n            onChange: event => {\n              this.setState({\n                JobTitle: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 58\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Description\",\n            className: \"form-control item\",\n            placeholder: \"Description\",\n            value: this.state.Description,\n            onChange: event => {\n              this.setState({\n                Description: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"SkillsNeeded\",\n            className: \"form-control item\",\n            placeholder: \"Skills Required\",\n            value: this.state.SkillsNeeded,\n            onChange: event => {\n              this.setState({\n                SkillsNeeded: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"BudgetTime\",\n            className: \"form-control item\",\n            placeholder: \"Budget and time\",\n            value: this.state.BudgetTime,\n            onChange: event => {\n              this.setState({\n                BudgetTime: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"logbtn\",\n          onClick: this.insertjob,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Dell/reactAbidit/src/Body/Addjob.js"],"names":["Component","state","insertjob","Button","Form","Container","Row","Col","axios","swal","Addjob","Userid","localStorage","getItem","JobOwner","JobTitle","Description","SkillsNeeded","BudgetTime","config","headers","authorization","e","preventDefault","post","then","response","data","success","title","text","icon","console","log","props","history","push","forceUpdate","catch","render","event","setState","target","value"],"mappings":"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","sourcesContent":["import { Component, state, insertjob } from 'react';\r\nimport { Button, Form, Container, Row, Col } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\n// For Admin and Job Owner\r\n\r\nexport default class Addjob extends Component {\r\n        state = {\r\n                Userid: localStorage.getItem('userid'),\r\n                JobOwner: localStorage.getItem('name'),\r\n                JobTitle: \"\",\r\n                Description: \"\",\r\n                SkillsNeeded: \"\",\r\n                BudgetTime: \"\",\r\n                config: {\r\n                        headers: {\r\n                                authorization: `Bearer ${localStorage.getItem('token')}`\r\n                        }\r\n                }\r\n        }\r\n\r\n        insertjob = (e) => {\r\n                e.preventDefault();\r\n                axios.post(\"http://localhost:3000/jobs/insert\", this.state, this.state.config)\r\n                        .then((response) => {\r\n                                if (response.data.success === true) {\r\n                                        swal({\r\n                                                title: \"New Job\",\r\n                                                text: \"The job has been Inserted.\",\r\n                                                icon: \"success\",\r\n                                        })\r\n                                        console.log(response)\r\n                                        this.props.history.push(\"/findjob\")\r\n                                        this.forceUpdate()\r\n\r\n                                }\r\n                                else if (response.data.success === false) {\r\n                                        swal(\"Invalid Input;\")\r\n                                }\r\n                        }\r\n                        )\r\n                        .catch()\r\n        }\r\n\r\n        render() {\r\n                return (\r\n                        <div className=\"adddata\">\r\n                                <Container>\r\n                    <Row><Col><h2 className=\"headTest\">Add New Job Oppertunity</h2></Col></Row>\r\n                </Container>\r\n                                <Form className=\"formme\"><p>\r\n                                <input type=\"text\" name=\"JobTitle\" className=\"form-control item\" placeholder=\"Provide a job title\"\r\n                                        value={this.state.JobTitle} onChange={(event) => { this.setState({ JobTitle: event.target.value }) }} />\r\n\r\n                        </p>\r\n                                <p><input type=\"text\" name=\"Description\" className=\"form-control item\" placeholder=\"Description\"\r\n                                        value={this.state.Description} onChange={(event) => { this.setState({ Description: event.target.value }) }} />\r\n                                </p>\r\n                                <p><input type=\"text\" name=\"SkillsNeeded\" className=\"form-control item\" placeholder=\"Skills Required\"\r\n                                        value={this.state.SkillsNeeded} onChange={(event) => { this.setState({ SkillsNeeded: event.target.value }) }} />\r\n                                </p>\r\n                                <p><input type=\"text\" name=\"BudgetTime\" className=\"form-control item\" placeholder=\"Budget and time\"\r\n                                        value={this.state.BudgetTime} onChange={(event) => { this.setState({ BudgetTime: event.target.value }) }} />\r\n                                </p>\r\n                                <Button variant=\"primary\" className=\"logbtn\" onClick={this.insertjob}>Submit</Button>\r\n                        </Form></div>\r\n                )\r\n        }\r\n}"]},"metadata":{},"sourceType":"module"}