{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\reactAbidit\\\\src\\\\Body\\\\Appjob.js\";\nimport React, { Component, state } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport swal from 'sweetalert'; // for Job Owner\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Appjob extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: localStorage.getItem('name'),\n      applications: [],\n      Approved: '',\n      config: {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:3000/application/owner/\" + this.state.name, this.state.config).then(response => {\n      this.setState({\n        applications: response.data.data\n      });\n      console.log(response);\n    }).catch(err => {\n      console.log(err.response);\n    });\n  }\n\n  acceptApp(idd) {\n    console.log(idd);\n    const data = {\n      Accepted: true\n    };\n    axios.put(\"http://localhost:3000/application/update/\" + idd, data, this.state.config).then(response => {\n      console.log(response);\n      swal('The application is Accepted');\n      this.props.history.push('/appjob');\n      this.componentDidMount();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  rejectjob(idd) {\n    console.log(idd);\n    const data = {\n      Accepted: 'rejected'\n    };\n    axios.put(\"http://localhost:3000/application/update/\" + idd, data, this.state.config).then(response => {\n      console.log(response);\n      swal('The application is Rejected');\n      this.props.history.push('/appjob');\n      this.componentDidMount();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"headTest\",\n              children: \"Applications Received\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), this.state.applications.length === 0 ? /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"No Applications Till Now. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 61\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: this.state.applications.map(app => {\n          const approve = app.Accepted;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jobsGain\",\n            style: !(approve === \"true\") ? {\n              color: 'brown'\n            } : {\n              color: 'green',\n              background: 'greenyellow'\n            },\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: [\"Applied Job Title : \", app.JobName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: \"ccd\",\n                  children: [\"Applicant Name : \", app.UserName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  className: \"ccd\",\n                  children: [\"Applicant's Email : \", app.Email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 37\n                }, this), approve === \"false\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: \"ccd\",\n                    children: [\"Approved : \", app.Accepted, \" (Application In Progress)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 64\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"appbtn\",\n                    variant: \"primary\",\n                    onClick: this.acceptApp.bind(this, app._id),\n                    children: \"Accept Application\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"appbtn\",\n                    variant: \"primary\",\n                    onClick: this.rejectjob.bind(this, app._id),\n                    children: \"Reject Application\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), approve === \"true\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: \"ccd\",\n                    children: [\"Approved: \", app.Accepted, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: \"ccd\",\n                    children: \"This Application is Approved. Further Communications to be done Through Email. \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), approve === \"rejected\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: \"ccd\",\n                    children: [\"Approved: \", app.Accepted, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    className: \"ccd\",\n                    children: \"This Application is Rejected \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, app._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Dell/reactAbidit/src/Body/Appjob.js"],"names":["React","Component","state","Container","Row","Col","Card","Button","axios","swal","Appjob","name","localStorage","getItem","applications","Approved","config","headers","authorization","componentDidMount","get","then","response","setState","data","console","log","catch","err","acceptApp","idd","Accepted","put","props","history","push","rejectjob","render","length","map","app","approve","color","background","JobName","UserName","Email","bind","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,KAA3B,QAAwC,OAAxC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,MAApC,QAAkD,iBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB,C,CAGA;;;;AACA,eAAe,MAAMC,MAAN,SAAqBT,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACJS,MAAAA,IAAI,EAACC,YAAY,CAACC,OAAb,CAAqB,MAArB,CADD;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,QAAQ,EAAC,EAHL;AAIJC,MAAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAG,UAASN,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADlD;AADL;AAJJ,KADkC;AAAA;;AAWtCM,EAAAA,iBAAiB,GAAG;AAChBX,IAAAA,KAAK,CAACY,GAAN,CAAU,6CAA4C,KAAKlB,KAAL,CAAWS,IAAjE,EAAuE,KAAKT,KAAL,CAAWc,MAAlF,EACKK,IADL,CACWC,QAAD,IAAc;AAChB,WAAKC,QAAL,CAAc;AACVT,QAAAA,YAAY,EAAEQ,QAAQ,CAACE,IAAT,CAAcA;AADlB,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACH,KANL,EAOKK,KAPL,CAOYC,GAAD,IAAS;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACN,QAAhB;AACH,KATL;AAUH;;AACDO,EAAAA,SAAS,CAACC,GAAD,EAAK;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,UAAMN,IAAI,GAAG;AACTO,MAAAA,QAAQ,EAAC;AADA,KAAb;AAGAvB,IAAAA,KAAK,CAACwB,GAAN,CAAU,8CAA8CF,GAAxD,EAA6DN,IAA7D,EAAkE,KAAKtB,KAAL,CAAWc,MAA7E,EACCK,IADD,CACOC,QAAD,IAAY;AACdG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAb,MAAAA,IAAI,CAAC,6BAAD,CAAJ;AACA,WAAKwB,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACA,WAAKhB,iBAAL;AACH,KAND,EAMGQ,KANH,CAMUC,GAAD,IAAO;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KARD;AAUH;;AACDQ,EAAAA,SAAS,CAACN,GAAD,EAAK;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,UAAMN,IAAI,GAAG;AACTO,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGAvB,IAAAA,KAAK,CAACwB,GAAN,CAAU,8CAA8CF,GAAxD,EAA6DN,IAA7D,EAAkE,KAAKtB,KAAL,CAAWc,MAA7E,EACCK,IADD,CACOC,QAAD,IAAY;AACdG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAb,MAAAA,IAAI,CAAC,6BAAD,CAAJ;AACA,WAAKwB,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACA,WAAKhB,iBAAL;AACH,KAND,EAMGQ,KANH,CAMUC,GAAD,IAAO;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KARD;AAUH;;AACLS,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,SAAD;AAAA,+BACI,QAAC,GAAD;AAAA,iCAAK,QAAC,GAAD;AAAA,mCAAK;AAAI,cAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAIO,KAAKnC,KAAL,CAAWY,YAAX,CAAwBwB,MAAzB,KAAqC,CAAtC,gBAA2C,QAAC,SAAD;AAAA,+BACxC,QAAC,GAAD;AAAA,iCAAK,QAAC,GAAD;AAAA,mCAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AADwC;AAAA;AAAA;AAAA;AAAA,cAA3C,gBAEc;AAAA,kBACX,KAAKpC,KAAL,CAAWY,YAAX,CAAwByB,GAAxB,CAA6BC,GAAD,IAAS;AACjC,gBAAMC,OAAO,GAAGD,GAAG,CAACT,QAApB;AACA,8BAAQ;AAAK,YAAA,SAAS,EAAC,UAAf;AAA0B,YAAA,KAAK,EAAE,EAAEU,OAAO,KAAK,MAAd,IAAwB;AAAEC,cAAAA,KAAK,EAAC;AAAR,aAAxB,GAA6C;AAACA,cAAAA,KAAK,EAAG,OAAT;AAAkBC,cAAAA,UAAU,EAAC;AAA7B,aAA9E;AAAA,mCAEJ,QAAC,IAAD;AAAA,qCACI,QAAC,IAAD,CAAM,IAAN;AAAA,wCACI,QAAC,IAAD,CAAM,KAAN;AAAA,qDAAiCH,GAAG,CAACI,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAW,kBAAA,SAAS,EAAC,KAArB;AAAA,kDAA6CJ,GAAG,CAACK,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAW,kBAAA,SAAS,EAAC,KAArB;AAAA,qDAAgDL,GAAG,CAACM,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,EAIML,OAAO,KAAK,OAAb,gBAAwB;AAAA,0CAAE,QAAC,IAAD,CAAM,IAAN;AAAW,oBAAA,SAAS,EAAC,KAArB;AAAA,8CAAuCD,GAAG,CAACT,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAF,eACzB,QAAC,MAAD;AAAQ,oBAAA,SAAS,EAAC,QAAlB;AAA2B,oBAAA,OAAO,EAAC,SAAnC;AAA6C,oBAAA,OAAO,EAAE,KAAKF,SAAL,CAAekB,IAAf,CAAoB,IAApB,EAAyBP,GAAG,CAACQ,GAA7B,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADyB,eAEzB,QAAC,MAAD;AAAQ,oBAAA,SAAS,EAAC,QAAlB;AAA2B,oBAAA,OAAO,EAAC,SAAnC;AAA6C,oBAAA,OAAO,EAAE,KAAKZ,SAAL,CAAeW,IAAf,CAAoB,IAApB,EAAyBP,GAAG,CAACQ,GAA7B,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFyB;AAAA,gCAAxB,gBAIK,qCARV,EASMP,OAAO,KAAK,MAAb,gBAAuB;AAAA,0CACpB,QAAC,IAAD,CAAM,IAAN;AAAW,oBAAA,SAAS,EAAC,KAArB;AAAA,6CAAsCD,GAAG,CAACT,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,0BADoB,eAEpB,QAAC,IAAD,CAAM,IAAN;AAAW,oBAAA,SAAS,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFoB;AAAA,gCAAvB,gBAGM,qCAZX,EAcMU,OAAO,KAAK,UAAb,gBAA2B;AAAA,0CAC5B,QAAC,IAAD,CAAM,IAAN;AAAW,oBAAA,SAAS,EAAC,KAArB;AAAA,6CAAsCD,GAAG,CAACT,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,0BAD4B,eAE5B,QAAC,IAAD,CAAM,IAAN;AAAW,oBAAA,SAAS,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAF4B;AAAA,gCAA3B,gBAGE,qCAjBP;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFI,aAAgIS,GAAG,CAACQ,GAApI;AAAA;AAAA;AAAA;AAAA,kBAAR;AA2BH,SA7BD;AADW,uBANnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA0CH;;AAlGyC","sourcesContent":["import React, { Component, state } from 'react'\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport swal from 'sweetalert'\r\n\r\n\r\n// for Job Owner\r\nexport default class Appjob extends Component {\r\n    state = {\r\n        name:localStorage.getItem('name'),\r\n        applications: [],\r\n        Approved:'',\r\n        config: {\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        }}\r\n\r\n        componentDidMount() {\r\n            axios.get(\"http://localhost:3000/application/owner/\" +this.state.name, this.state.config)\r\n                .then((response) => {\r\n                    this.setState({\r\n                        applications: response.data.data\r\n                    })\r\n                    console.log(response)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err.response)\r\n                })\r\n        }\r\n        acceptApp(idd){\r\n            console.log(idd)\r\n            const data = {\r\n                Accepted:true\r\n            }\r\n            axios.put(\"http://localhost:3000/application/update/\" + idd, data,this.state.config)\r\n            .then((response)=>{\r\n                console.log(response)\r\n                swal('The application is Accepted')\r\n                this.props.history.push('/appjob')\r\n                this.componentDidMount()\r\n            }).catch((err)=>{\r\n                console.log(err)\r\n            })\r\n\r\n        } \r\n        rejectjob(idd){\r\n            console.log(idd)\r\n            const data = {\r\n                Accepted: 'rejected'\r\n            }\r\n            axios.put(\"http://localhost:3000/application/update/\" + idd, data,this.state.config)\r\n            .then((response)=>{\r\n                console.log(response)\r\n                swal('The application is Rejected')\r\n                this.props.history.push('/appjob')\r\n                this.componentDidMount()\r\n            }).catch((err)=>{\r\n                console.log(err)\r\n            })\r\n\r\n        }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row><Col><h2 className=\"headTest\">Applications Received</h2></Col></Row>\r\n                </Container>\r\n                {((this.state.applications.length) === 0) ? <Container>\r\n                    <Row><Col><h2>No Applications Till Now. </h2></Col></Row>\r\n                </Container> : <>{\r\n                    this.state.applications.map((app) => {\r\n                        const approve = app.Accepted\r\n                        return (<div className=\"jobsGain\" style={!(approve === \"true\") ? { color:'brown', } : {color : 'green', background:'greenyellow'}} key={app._id}>\r\n\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <Card.Title>Applied Job Title : {app.JobName}</Card.Title>\r\n                                    <Card.Text className=\"ccd\">Applicant Name : {app.UserName}</Card.Text>\r\n                                    <Card.Text className=\"ccd\">Applicant's Email : {app.Email}</Card.Text>\r\n                                    {(approve === \"false\") ? <><Card.Text className=\"ccd\">Approved : {app.Accepted} (Application In Progress)</Card.Text>\r\n                                    <Button className='appbtn' variant='primary' onClick={this.acceptApp.bind(this,app._id)}>Accept Application</Button>\r\n                                    <Button className='appbtn' variant='primary' onClick={this.rejectjob.bind(this,app._id)}>Reject Application</Button>\r\n\r\n                                    </> : <></>}\r\n                                    {(approve === \"true\") ? <>\r\n                                        <Card.Text className=\"ccd\">Approved: {app.Accepted} </Card.Text>\r\n                                        <Card.Text className=\"ccd\">This Application is Approved. Further Communications to be done Through Email. </Card.Text>\r\n                                       </>:<></>\r\n                                    } \r\n                                    {(approve === \"rejected\") ? <>\r\n                                    <Card.Text className=\"ccd\">Approved: {app.Accepted} </Card.Text>\r\n                                    <Card.Text className=\"ccd\">This Application is Rejected </Card.Text>\r\n                                   </>:<></>\r\n                                }\r\n\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                        )\r\n                    })\r\n                }</>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}