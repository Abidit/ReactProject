{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\reactAbidit\\\\src\\\\Body\\\\ViewUsers.js\";\nimport axios from 'axios';\nimport React, { Component, state } from 'react';\nimport { Col, Container, Row, Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class ViewUsers extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: localStorage.getItem('name'),\n      userss: [],\n      config: {\n        headers: {\n          authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:3000/user/all\", this.state.config).then(response => {\n      this.setState({\n        userss: response.data.data\n      });\n    }).catch(err => {\n      console.log(err.response);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"headTest\",\n              children: \"Listed Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), this.state.userss.length === 0 ? /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"No Users Registered till now. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 55\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: this.state.userss.map(user => {\n          const type = user.Usertype;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listuser\",\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    className: \"listcard\",\n                    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                        children: type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 41,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                        className: \"ccd\",\n                        children: [\"Name : \", user.Fullname]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 42,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                        className: \"ccd\",\n                        children: [\"Email : \", user.Email]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 43,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                        className: \"ccd\",\n                        children: [\"Username : \", user.Username]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 44,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 39,\n                      columnNumber: 77\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 50\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, user._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Dell/reactAbidit/src/Body/ViewUsers.js"],"names":["axios","React","Component","state","Col","Container","Row","Card","ViewUsers","name","localStorage","getItem","userss","config","headers","authorization","componentDidMount","get","then","response","setState","data","catch","err","console","log","render","length","map","user","type","Usertype","Fullname","Email","Username","_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA0BC,KAA1B,QAAuC,OAAvC;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,iBAA1C;;;AAEA,eAAe,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC7CC,KAD6C,GACrC;AACJM,MAAAA,IAAI,EAACC,YAAY,CAACC,OAAb,CAAqB,MAArB,CADD;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,MAAM,EAAE;AACJC,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAG,UAASL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AADlD;AADL;AAHJ,KADqC;AAAA;;AAUzCK,EAAAA,iBAAiB,GAAG;AAChBhB,IAAAA,KAAK,CAACiB,GAAN,CAAU,gCAAV,EAA6C,KAAKd,KAAL,CAAWU,MAAxD,EACKK,IADL,CACWC,QAAD,IAAc;AAChB,WAAKC,QAAL,CAAc;AACVR,QAAAA,MAAM,EAAEO,QAAQ,CAACE,IAAT,CAAcA;AADZ,OAAd;AAGH,KALL,EAMKC,KANL,CAMYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACJ,QAAhB;AACH,KARL;AASH;;AAELO,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,SAAD;AAAA,+BACI,QAAC,GAAD;AAAA,iCAAK,QAAC,GAAD;AAAA,mCAAK;AAAI,cAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAIO,KAAKvB,KAAL,CAAWS,MAAX,CAAkBe,MAAnB,KAA+B,CAAhC,gBAAqC,QAAC,SAAD;AAAA,+BAClC,QAAC,GAAD;AAAA,iCAAK,QAAC,GAAD;AAAA,mCAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AADkC;AAAA;AAAA;AAAA;AAAA,cAArC,gBAEc;AAAA,kBACX,KAAKxB,KAAL,CAAWS,MAAX,CAAkBgB,GAAlB,CAAuBC,IAAD,IAAU;AAC5B,gBAAMC,IAAI,GAAGD,IAAI,CAACE,QAAlB;AACA,8BAAQ;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACJ,QAAC,SAAD;AAAA,qCAAW,QAAC,GAAD;AAAA,uCAAK,QAAC,GAAD;AAAA,yCAAK,QAAC,IAAD;AAAM,oBAAA,SAAS,EAAC,UAAhB;AAAA,2CAA2B,QAAC,IAAD,CAAM,IAAN;AAAA,8CAExC,QAAC,IAAD,CAAM,KAAN;AAAA,kCAAaD;AAAb;AAAA;AAAA;AAAA;AAAA,8BAFwC,eAGxC,QAAC,IAAD,CAAM,IAAN;AAAW,wBAAA,SAAS,EAAC,KAArB;AAAA,8CAAmCD,IAAI,CAACG,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHwC,eAIxC,QAAC,IAAD,CAAM,IAAN;AAAW,wBAAA,SAAS,EAAC,KAArB;AAAA,+CAAoCH,IAAI,CAACI,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,8BAJwC,eAKxC,QAAC,IAAD,CAAM,IAAN;AAAW,wBAAA,SAAS,EAAC,KAArB;AAAA,kDAAuCJ,IAAI,CAACK,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,8BALwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;AAAA;AAAA;AADI,aAA+BL,IAAI,CAACM,GAApC;AAAA;AAAA;AAAA;AAAA,kBAAR;AAcH,SAhBD;AADW,uBANnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA6BH;;AApD4C","sourcesContent":["import axios from 'axios'\r\nimport React, { Component,state } from 'react'\r\nimport { Col, Container, Row, Card } from 'react-bootstrap'\r\n\r\nexport default class ViewUsers extends Component {\r\n    state = {\r\n        name:localStorage.getItem('name'),\r\n        userss: [],\r\n        config: {\r\n            headers: {\r\n                authorization: `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        }}\r\n\r\n        componentDidMount() {\r\n            axios.get(\"http://localhost:3000/user/all\" , this.state.config)\r\n                .then((response) => {\r\n                    this.setState({\r\n                        userss: response.data.data\r\n                    })\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err.response)\r\n                })\r\n        }\r\n        \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Row><Col><h2 className=\"headTest\">Listed Users</h2></Col></Row>\r\n                </Container>\r\n                {((this.state.userss.length) === 0) ? <Container>\r\n                    <Row><Col><h2>No Users Registered till now. </h2></Col></Row>\r\n                </Container> : <>{\r\n                    this.state.userss.map((user) => {\r\n                        const type = user.Usertype\r\n                        return (<div className=\"listuser\" key={user._id}>\r\n                            <Container><Row><Col><Card className=\"listcard\"><Card.Body>\r\n                            \r\n                                    <Card.Title>{type}</Card.Title>\r\n                                    <Card.Text className=\"ccd\">Name : {user.Fullname}</Card.Text>\r\n                                    <Card.Text className=\"ccd\">Email : {user.Email}</Card.Text>\r\n                                    <Card.Text className=\"ccd\">Username : {user.Username}</Card.Text>\r\n                            </Card.Body>\r\n                            </Card>\r\n                    \r\n                            </Col></Row></Container>\r\n\r\n                        </div>\r\n                        )\r\n                    })\r\n                }</>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}